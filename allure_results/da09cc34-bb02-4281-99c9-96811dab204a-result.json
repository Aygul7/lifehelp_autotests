{"name": "test_registrations_error_messages[missing_latin_letter_password]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=117.0.5938.134); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF793277892+54818]\n\t(No symbol) [0x00007FF7931E6AC2]\n\t(No symbol) [0x00007FF79309DA3B]\n\t(No symbol) [0x00007FF7930A246D]\n\t(No symbol) [0x00007FF7930A42AA]\n\t(No symbol) [0x00007FF793117C34]\n\t(No symbol) [0x00007FF7930FEAAA]\n\t(No symbol) [0x00007FF7931175A2]\n\t(No symbol) [0x00007FF7930FE883]\n\t(No symbol) [0x00007FF7930D3691]\n\t(No symbol) [0x00007FF7930D48D4]\n\tGetHandleVerifier [0x00007FF7935DB992+3610402]\n\tGetHandleVerifier [0x00007FF793631860+3962352]\n\tGetHandleVerifier [0x00007FF793629D4F+3930847]\n\tGetHandleVerifier [0x00007FF793313646+693206]\n\t(No symbol) [0x00007FF7931F1628]\n\t(No symbol) [0x00007FF7931ED934]\n\t(No symbol) [0x00007FF7931EDA62]\n\t(No symbol) [0x00007FF7931DE113]\n\tBaseThreadInitThunk [0x00007FFF50327344+20]\n\tRtlUserThreadStart [0x00007FFF513226B1+33]", "trace": "authorization_page = <pages.authorization_page.AuthorizationPage object at 0x000002358D457550>\nfirst = 'aigul.shafigullina@yandex.ru', second = '12345671@'\nthird = '12345671@'\nfourth = 'Пароль должен содержать хотя бы одну букву латинского алфавита'\n\n    @pytest.mark.parametrize('first, second, third, fourth', (case_1, case_2, case_3, case_4, case_5, case_6),\n                                 ids=['phone_instead_email', 'not_matching_passwords', 'missing_number_password',\n                                      \"missing_symbol_password\", \"cyrillic_password\", \"missing_latin_letter_password\" ])\n    def test_registrations_error_messages(authorization_page, first, second, third, fourth):\n        authorization_page.click_to_login_button()\n        authorization_page.click_to_login_w_password_button()\n        authorization_page.click_register_hypertext()\n        authorization_page.set_your_email_registration_fixture(first)\n        authorization_page.set_password_registration_form_fixture(second)\n        authorization_page.repeat_password_registration_form_fixture(third)\n        authorization_page.click_first_checkbox_consent_registration_form()\n        authorization_page.scroll_to_register_button_registration_form()\n        authorization_page.click_to_register_button_registration_form()\n>       authorization_page.verify_error_message_registration_fixture(fourth)\n\ntests\\test_authorization.py:722: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\authorization_page.py:1052: in verify_error_message_registration_fixture\n    actual_result = self.get_text_title_of_element(\nbase\\base_object.py:56: in get_text_title_of_element\n    return self.is_clickable(locator).text\nbase\\base_object.py:24: in is_clickable\n    return self.wait.until(ec.element_to_be_clickable(locator))\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:86: in until\n    value = method(self._driver)\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:355: in _predicate\n    target = visibility_of(target)(driver)\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:168: in _predicate\n    return _element_if_visible(element)\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:174: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:251: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:404: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002358D457790>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...07FF7931DE113]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF50327344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFF513226B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=117.0.5938.134); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF793277892+54818]\nE       \t(No symbol) [0x00007FF7931E6AC2]\nE       \t(No symbol) [0x00007FF79309DA3B]\nE       \t(No symbol) [0x00007FF7930A246D]\nE       \t(No symbol) [0x00007FF7930A42AA]\nE       \t(No symbol) [0x00007FF793117C34]\nE       \t(No symbol) [0x00007FF7930FEAAA]\nE       \t(No symbol) [0x00007FF7931175A2]\nE       \t(No symbol) [0x00007FF7930FE883]\nE       \t(No symbol) [0x00007FF7930D3691]\nE       \t(No symbol) [0x00007FF7930D48D4]\nE       \tGetHandleVerifier [0x00007FF7935DB992+3610402]\nE       \tGetHandleVerifier [0x00007FF793631860+3962352]\nE       \tGetHandleVerifier [0x00007FF793629D4F+3930847]\nE       \tGetHandleVerifier [0x00007FF793313646+693206]\nE       \t(No symbol) [0x00007FF7931F1628]\nE       \t(No symbol) [0x00007FF7931ED934]\nE       \t(No symbol) [0x00007FF7931EDA62]\nE       \t(No symbol) [0x00007FF7931DE113]\nE       \tBaseThreadInitThunk [0x00007FFF50327344+20]\nE       \tRtlUserThreadStart [0x00007FFF513226B1+33]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "steps": [{"name": "clicking to \"Login\" button", "status": "passed", "start": 1696403762123, "stop": 1696403764716}, {"name": "clicking to \"Login with password\" button", "status": "passed", "start": 1696403764717, "stop": 1696403764961}, {"name": "click \"register\" hypertext", "status": "passed", "start": 1696403764961, "stop": 1696403766602}, {"name": "set up \"your email\" in registration form", "status": "passed", "parameters": [{"name": "first", "value": "'aigul.shafigullina@yandex.ru'"}], "start": 1696403766602, "stop": 1696403766948}, {"name": "set password in registration form_fixture", "status": "passed", "parameters": [{"name": "second", "value": "'12345671@'"}], "start": 1696403766949, "stop": 1696403767210}, {"name": "repeat password in registration form_fixture", "status": "passed", "parameters": [{"name": "third", "value": "'12345671@'"}], "start": 1696403767211, "stop": 1696403767371}, {"name": "click first checkbox of consent in registration form", "status": "passed", "start": 1696403767372, "stop": 1696403767573}, {"name": "scroll the page till the \"register\" button in registration form", "status": "passed", "start": 1696403767574, "stop": 1696403768042}, {"name": "click \"to register\" button in registration form", "status": "passed", "start": 1696403768042, "stop": 1696403769266}, {"name": "verify error message in registration form", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=117.0.5938.134); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF793277892+54818]\n\t(No symbol) [0x00007FF7931E6AC2]\n\t(No symbol) [0x00007FF79309DA3B]\n\t(No symbol) [0x00007FF7930A246D]\n\t(No symbol) [0x00007FF7930A42AA]\n\t(No symbol) [0x00007FF793117C34]\n\t(No symbol) [0x00007FF7930FEAAA]\n\t(No symbol) [0x00007FF7931175A2]\n\t(No symbol) [0x00007FF7930FE883]\n\t(No symbol) [0x00007FF7930D3691]\n\t(No symbol) [0x00007FF7930D48D4]\n\tGetHandleVerifier [0x00007FF7935DB992+3610402]\n\tGetHandleVerifier [0x00007FF793631860+3962352]\n\tGetHandleVerifier [0x00007FF793629D4F+3930847]\n\tGetHandleVerifier [0x00007FF793313646+693206]\n\t(No symbol) [0x00007FF7931F1628]\n\t(No symbol) [0x00007FF7931ED934]\n\t(No symbol) [0x00007FF7931EDA62]\n\t(No symbol) [0x00007FF7931DE113]\n\tBaseThreadInitThunk [0x00007FFF50327344+20]\n\tRtlUserThreadStart [0x00007FFF513226B1+33]\n\n", "trace": "  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\pages\\authorization_page.py\", line 1052, in verify_error_message_registration_fixture\n    actual_result = self.get_text_title_of_element(\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\base\\base_object.py\", line 56, in get_text_title_of_element\n    return self.is_clickable(locator).text\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\base\\base_object.py\", line 24, in is_clickable\n    return self.wait.until(ec.element_to_be_clickable(locator))\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 86, in until\n    value = method(self._driver)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 355, in _predicate\n    target = visibility_of(target)(driver)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 168, in _predicate\n    return _element_if_visible(element)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 174, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 251, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 404, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "fourth", "value": "'Пароль должен содержать хотя бы одну букву латинского алфавита'"}], "start": 1696403769266, "stop": 1696403770035}], "parameters": [{"name": "first", "value": "'aigul.shafigullina@yandex.ru'"}, {"name": "second", "value": "'12345671@'"}, {"name": "third", "value": "'12345671@'"}, {"name": "fourth", "value": "'Пароль должен содержать хотя бы одну букву латинского алфавита'"}], "start": 1696403762123, "stop": 1696403770084, "uuid": "798cffbe-db9e-4fcf-b14f-4cc2f36b6c1d", "historyId": "e3ae8eaa04dec8ca6b770a6d3e8dd3c0", "testCaseId": "01609061ad681f07a7f52b36ebc3800e", "fullName": "tests.test_authorization#test_registrations_error_messages", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_authorization"}, {"name": "host", "value": "DESKTOP-MNCDD93"}, {"name": "thread", "value": "11344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_authorization"}]}