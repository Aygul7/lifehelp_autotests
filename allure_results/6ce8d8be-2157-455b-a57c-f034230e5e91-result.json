{"name": "test_change_psychologist_during_order_session_in_package_4", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (633, 643)\n  (Session info: chrome=117.0.5938.134)\nStacktrace:\n\tGetHandleVerifier [0x00007FF793277892+54818]\n\t(No symbol) [0x00007FF7931E6AC2]\n\t(No symbol) [0x00007FF79309DA3B]\n\t(No symbol) [0x00007FF7930E47CB]\n\t(No symbol) [0x00007FF7930E2B99]\n\t(No symbol) [0x00007FF7930E0968]\n\t(No symbol) [0x00007FF7930DFA23]\n\t(No symbol) [0x00007FF7930D571F]\n\t(No symbol) [0x00007FF7930FEAAA]\n\t(No symbol) [0x00007FF7930D5036]\n\t(No symbol) [0x00007FF7930FECC0]\n\t(No symbol) [0x00007FF7931175A2]\n\t(No symbol) [0x00007FF7930FE883]\n\t(No symbol) [0x00007FF7930D3691]\n\t(No symbol) [0x00007FF7930D48D4]\n\tGetHandleVerifier [0x00007FF7935DB992+3610402]\n\tGetHandleVerifier [0x00007FF793631860+3962352]\n\tGetHandleVerifier [0x00007FF793629D4F+3930847]\n\tGetHandleVerifier [0x00007FF793313646+693206]\n\t(No symbol) [0x00007FF7931F1628]\n\t(No symbol) [0x00007FF7931ED934]\n\t(No symbol) [0x00007FF7931EDA62]\n\t(No symbol) [0x00007FF7931DE113]\n\tBaseThreadInitThunk [0x00007FFF50327344+20]\n\tRtlUserThreadStart [0x00007FFF513226B1+33]", "trace": "authorization_page = <pages.authorization_page.AuthorizationPage object at 0x000002358CBC5B10>\n\n    def test_change_psychologist_during_order_session_in_package_4(authorization_page):\n        authorization_page.click_to_login_button()\n        authorization_page.click_to_login_w_password_button()\n        authorization_page.set_email_email()\n        authorization_page.set_password_pass()\n        authorization_page.click_to_authorize_button()\n        authorization_page.click_my_balance_menu_navigation()\n        authorization_page.scroll_to_empty_element_order_session_package()\n>       authorization_page.click_to_select_new_doctor_btn_package_session()\n\ntests\\test_authorization.py:824: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\authorization_page.py:1119: in click_to_select_new_doctor_btn_package_session\n    self.to_click(AuthorizationLocators.SELECT_NEW_DOCTOR_PACKAGE_SESSION)\nbase\\base_object.py:32: in to_click\n    self.is_clickable(locator).click()\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002358CBC7340>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7931DE113]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF50327344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFF513226B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (633, 643)\nE         (Session info: chrome=117.0.5938.134)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF793277892+54818]\nE       \t(No symbol) [0x00007FF7931E6AC2]\nE       \t(No symbol) [0x00007FF79309DA3B]\nE       \t(No symbol) [0x00007FF7930E47CB]\nE       \t(No symbol) [0x00007FF7930E2B99]\nE       \t(No symbol) [0x00007FF7930E0968]\nE       \t(No symbol) [0x00007FF7930DFA23]\nE       \t(No symbol) [0x00007FF7930D571F]\nE       \t(No symbol) [0x00007FF7930FEAAA]\nE       \t(No symbol) [0x00007FF7930D5036]\nE       \t(No symbol) [0x00007FF7930FECC0]\nE       \t(No symbol) [0x00007FF7931175A2]\nE       \t(No symbol) [0x00007FF7930FE883]\nE       \t(No symbol) [0x00007FF7930D3691]\nE       \t(No symbol) [0x00007FF7930D48D4]\nE       \tGetHandleVerifier [0x00007FF7935DB992+3610402]\nE       \tGetHandleVerifier [0x00007FF793631860+3962352]\nE       \tGetHandleVerifier [0x00007FF793629D4F+3930847]\nE       \tGetHandleVerifier [0x00007FF793313646+693206]\nE       \t(No symbol) [0x00007FF7931F1628]\nE       \t(No symbol) [0x00007FF7931ED934]\nE       \t(No symbol) [0x00007FF7931EDA62]\nE       \t(No symbol) [0x00007FF7931DE113]\nE       \tBaseThreadInitThunk [0x00007FFF50327344+20]\nE       \tRtlUserThreadStart [0x00007FFF513226B1+33]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "clicking to \"Login\" button", "status": "passed", "start": 1696404253354, "stop": 1696404256091}, {"name": "clicking to \"Login with password\" button", "status": "passed", "start": 1696404256091, "stop": 1696404256509}, {"name": "set up password", "status": "passed", "start": 1696404256975, "stop": 1696404257257}, {"name": "clicking to \"Authorize\" button", "status": "passed", "start": 1696404257257, "stop": 1696404257389}, {"name": "click to \"my balance\" in clients menu navigation", "status": "passed", "start": 1696404257389, "stop": 1696404262050}, {"name": "scroll to empty element to order session in package", "status": "passed", "start": 1696404262051, "stop": 1696404263690}, {"name": "click to \"select new doctor\" button on package session", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (633, 643)\n  (Session info: chrome=117.0.5938.134)\nStacktrace:\n\tGetHandleVerifier [0x00007FF793277892+54818]\n\t(No symbol) [0x00007FF7931E6AC2]\n\t(No symbol) [0x00007FF79309DA3B]\n\t(No symbol) [0x00007FF7930E47CB]\n\t(No symbol) [0x00007FF7930E2B99]\n\t(No symbol) [0x00007FF7930E0968]\n\t(No symbol) [0x00007FF7930DFA23]\n\t(No symbol) [0x00007FF7930D571F]\n\t(No symbol) [0x00007FF7930FEAAA]\n\t(No symbol) [0x00007FF7930D5036]\n\t(No symbol) [0x00007FF7930FECC0]\n\t(No symbol) [0x00007FF7931175A2]\n\t(No symbol) [0x00007FF7930FE883]\n\t(No symbol) [0x00007FF7930D3691]\n\t(No symbol) [0x00007FF7930D48D4]\n\tGetHandleVerifier [0x00007FF7935DB992+3610402]\n\tGetHandleVerifier [0x00007FF793631860+3962352]\n\tGetHandleVerifier [0x00007FF793629D4F+3930847]\n\tGetHandleVerifier [0x00007FF793313646+693206]\n\t(No symbol) [0x00007FF7931F1628]\n\t(No symbol) [0x00007FF7931ED934]\n\t(No symbol) [0x00007FF7931EDA62]\n\t(No symbol) [0x00007FF7931DE113]\n\tBaseThreadInitThunk [0x00007FFF50327344+20]\n\tRtlUserThreadStart [0x00007FFF513226B1+33]\n\n", "trace": "  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\pages\\authorization_page.py\", line 1119, in click_to_select_new_doctor_btn_package_session\n    self.to_click(AuthorizationLocators.SELECT_NEW_DOCTOR_PACKAGE_SESSION)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\base\\base_object.py\", line 32, in to_click\n    self.is_clickable(locator).click()\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1696404263691, "stop": 1696404265418}], "start": 1696404253354, "stop": 1696404265427, "uuid": "08925cea-7b0b-4839-9dfa-52f4644e4566", "historyId": "9933316d080c2feec4dc752ec513a6dd", "testCaseId": "5a709d01306e447d843efad5af3cb3ba", "fullName": "tests.test_authorization#test_change_psychologist_during_order_session_in_package_4", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_authorization"}, {"name": "host", "value": "DESKTOP-MNCDD93"}, {"name": "thread", "value": "11344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_authorization"}]}