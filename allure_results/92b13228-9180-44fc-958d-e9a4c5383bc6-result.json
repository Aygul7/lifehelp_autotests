{"name": "test_regular_session_order_schedule", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "authorization_page = <pages.authorization_page.AuthorizationPage object at 0x00000285AD5743A0>\n\n    def test_regular_session_order_schedule(authorization_page):\n        authorization_page.click_to_login_button()\n        authorization_page.click_to_login_w_password_button()\n        authorization_page.set_email_email()\n        authorization_page.set_password_pass()\n        authorization_page.click_to_authorize_button()\n        authorization_page.click_to_three_dots_button_ordered_session()\n        # authorization_page.click_regular_session_order_icon()\n>       authorization_page.click_regular_session_order_dropdown_menu_list()\n\ntests\\test_authorization.py:845: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\authorization_page.py:1089: in click_regular_session_order_dropdown_menu_list\n    self.to_click(AuthorizationLocators.REGULAR_SESSION_DROPDOWN)\nbase\\base_object.py:32: in to_click\n    self.is_clickable(locator).click()\nbase\\base_object.py:24: in is_clickable\n    return self.wait.until(ec.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e852de09ba3d4740d2892859e8455d46\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000285AD4EC310>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "steps": [{"name": "clicking to \"Login\" button", "status": "passed", "start": 1694066398635, "stop": 1694066401792}, {"name": "clicking to \"Login with password\" button", "status": "passed", "start": 1694066401792, "stop": 1694066401943}, {"name": "set up password", "status": "passed", "start": 1694066402362, "stop": 1694066402581}, {"name": "clicking to \"Authorize\" button", "status": "passed", "start": 1694066402581, "stop": 1694066402740}, {"name": "click to \"3 dots\" button on automatic order session", "status": "passed", "start": 1694066402740, "stop": 1694066406977}, {"name": "click to \"regular session\" in dropdown menu list", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\pages\\authorization_page.py\", line 1089, in click_regular_session_order_dropdown_menu_list\n    self.to_click(AuthorizationLocators.REGULAR_SESSION_DROPDOWN)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\base\\base_object.py\", line 32, in to_click\n    self.is_clickable(locator).click()\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\base\\base_object.py\", line 24, in is_clickable\n    return self.wait.until(ec.element_to_be_clickable(locator))\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1694066406977, "stop": 1694066412031}], "start": 1694066398634, "stop": 1694066412034, "uuid": "890a774d-3181-4937-af05-6d453abe94dd", "historyId": "959346838817da50e0f3921ac040a0f6", "testCaseId": "8acd4f7c99768156a62fb49c7d004dbc", "fullName": "tests.test_authorization#test_regular_session_order_schedule", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_authorization"}, {"name": "host", "value": "DESKTOP-MNCDD93"}, {"name": "thread", "value": "46092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_authorization"}]}