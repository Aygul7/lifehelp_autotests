{"name": "test_order_session", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (642, 989)\n  (Session info: chrome=118.0.5993.71)\nStacktrace:\n\tGetHandleVerifier [0x00007FF63F148EF2+54786]\n\t(No symbol) [0x00007FF63F0B5612]\n\t(No symbol) [0x00007FF63EF6A64B]\n\t(No symbol) [0x00007FF63EFB1A6B]\n\t(No symbol) [0x00007FF63EFAFE39]\n\t(No symbol) [0x00007FF63EFADC08]\n\t(No symbol) [0x00007FF63EFACCC3]\n\t(No symbol) [0x00007FF63EFA29CF]\n\t(No symbol) [0x00007FF63EFCBE6A]\n\t(No symbol) [0x00007FF63EFA22E6]\n\t(No symbol) [0x00007FF63EFCC080]\n\t(No symbol) [0x00007FF63EFE4D02]\n\t(No symbol) [0x00007FF63EFCBC43]\n\t(No symbol) [0x00007FF63EFA0941]\n\t(No symbol) [0x00007FF63EFA1B84]\n\tGetHandleVerifier [0x00007FF63F497F52+3524194]\n\tGetHandleVerifier [0x00007FF63F4ED800+3874576]\n\tGetHandleVerifier [0x00007FF63F4E5D7F+3843215]\n\tGetHandleVerifier [0x00007FF63F1E5086+694166]\n\t(No symbol) [0x00007FF63F0C0A88]\n\t(No symbol) [0x00007FF63F0BCA94]\n\t(No symbol) [0x00007FF63F0BCBC2]\n\t(No symbol) [0x00007FF63F0ACC83]\n\tBaseThreadInitThunk [0x00007FFAC5AF7344+20]\n\tRtlUserThreadStart [0x00007FFAC63A26B1+33]", "trace": "setup_direct_link = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1674925fdfd84e594f0d04cc07689d42\")>\ndirect_psychologist_page = <pages.direct_psychologist_page.PsychologistPage object at 0x0000029878CD9D20>\n\n    def test_order_session(setup_direct_link, direct_psychologist_page):\n>       direct_psychologist_page.scroll_to_schedule()\n\ntests\\test_direct_link_psycho_page.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\direct_psychologist_page.py:48: in scroll_to_schedule\n    self.move_to_element(PsychologistPageLocators.ORDER_TIME_TEST)\nbase\\base_object.py:75: in move_to_element\n    elements_btn.click()\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000029878CD9420>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF63F0ACC83]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAC5AF7344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFAC63A26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (642, 989)\nE         (Session info: chrome=118.0.5993.71)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF63F148EF2+54786]\nE       \t(No symbol) [0x00007FF63F0B5612]\nE       \t(No symbol) [0x00007FF63EF6A64B]\nE       \t(No symbol) [0x00007FF63EFB1A6B]\nE       \t(No symbol) [0x00007FF63EFAFE39]\nE       \t(No symbol) [0x00007FF63EFADC08]\nE       \t(No symbol) [0x00007FF63EFACCC3]\nE       \t(No symbol) [0x00007FF63EFA29CF]\nE       \t(No symbol) [0x00007FF63EFCBE6A]\nE       \t(No symbol) [0x00007FF63EFA22E6]\nE       \t(No symbol) [0x00007FF63EFCC080]\nE       \t(No symbol) [0x00007FF63EFE4D02]\nE       \t(No symbol) [0x00007FF63EFCBC43]\nE       \t(No symbol) [0x00007FF63EFA0941]\nE       \t(No symbol) [0x00007FF63EFA1B84]\nE       \tGetHandleVerifier [0x00007FF63F497F52+3524194]\nE       \tGetHandleVerifier [0x00007FF63F4ED800+3874576]\nE       \tGetHandleVerifier [0x00007FF63F4E5D7F+3843215]\nE       \tGetHandleVerifier [0x00007FF63F1E5086+694166]\nE       \t(No symbol) [0x00007FF63F0C0A88]\nE       \t(No symbol) [0x00007FF63F0BCA94]\nE       \t(No symbol) [0x00007FF63F0BCBC2]\nE       \t(No symbol) [0x00007FF63F0ACC83]\nE       \tBaseThreadInitThunk [0x00007FFAC5AF7344+20]\nE       \tRtlUserThreadStart [0x00007FFAC63A26B1+33]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "scroll till the main schedule", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element is not clickable at point (642, 989)\n  (Session info: chrome=118.0.5993.71)\nStacktrace:\n\tGetHandleVerifier [0x00007FF63F148EF2+54786]\n\t(No symbol) [0x00007FF63F0B5612]\n\t(No symbol) [0x00007FF63EF6A64B]\n\t(No symbol) [0x00007FF63EFB1A6B]\n\t(No symbol) [0x00007FF63EFAFE39]\n\t(No symbol) [0x00007FF63EFADC08]\n\t(No symbol) [0x00007FF63EFACCC3]\n\t(No symbol) [0x00007FF63EFA29CF]\n\t(No symbol) [0x00007FF63EFCBE6A]\n\t(No symbol) [0x00007FF63EFA22E6]\n\t(No symbol) [0x00007FF63EFCC080]\n\t(No symbol) [0x00007FF63EFE4D02]\n\t(No symbol) [0x00007FF63EFCBC43]\n\t(No symbol) [0x00007FF63EFA0941]\n\t(No symbol) [0x00007FF63EFA1B84]\n\tGetHandleVerifier [0x00007FF63F497F52+3524194]\n\tGetHandleVerifier [0x00007FF63F4ED800+3874576]\n\tGetHandleVerifier [0x00007FF63F4E5D7F+3843215]\n\tGetHandleVerifier [0x00007FF63F1E5086+694166]\n\t(No symbol) [0x00007FF63F0C0A88]\n\t(No symbol) [0x00007FF63F0BCA94]\n\t(No symbol) [0x00007FF63F0BCBC2]\n\t(No symbol) [0x00007FF63F0ACC83]\n\tBaseThreadInitThunk [0x00007FFAC5AF7344+20]\n\tRtlUserThreadStart [0x00007FFAC63A26B1+33]\n\n", "trace": "  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\pages\\direct_psychologist_page.py\", line 48, in scroll_to_schedule\n    self.move_to_element(PsychologistPageLocators.ORDER_TIME_TEST)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\base\\base_object.py\", line 75, in move_to_element\n    elements_btn.click()\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 344, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Owner\\PycharmProjects\\LifeHelp\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1697607709076, "stop": 1697607712346}], "start": 1697607709076, "stop": 1697607712403, "uuid": "11fb2a74-d260-42d6-bbc4-751cd3e2aafc", "historyId": "02de304db7f03e3a9d3b28b3ea69e4d6", "testCaseId": "1eda7f9e089b3cce8a8a4306508202ea", "fullName": "tests.test_direct_link_psycho_page#test_order_session", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_direct_link_psycho_page"}, {"name": "host", "value": "DESKTOP-MNCDD93"}, {"name": "thread", "value": "8584-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_direct_link_psycho_page"}]}